<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:NoeticTools.TeamStatusBoard.Framework.Converters"
                    xmlns:loc="clr-namespace:NoeticTools.TeamStatusBoard.Framework">

    <SolidColorBrush x:Key="RunningFailedForegroundColour" Color="White" />
    <SolidColorBrush x:Key="RunningForegroundColour" Color="DarkSlateGray" />
    <SolidColorBrush x:Key="SuccessForegroundColour" Color="White" />
    <SolidColorBrush x:Key="FailureForegroundColour" Color="White" />
    <SolidColorBrush x:Key="UnnkownForegroundColour" Color="White" />

    <SolidColorBrush x:Key="RunningFailedBackgroundColour" Color="OrangeRed" />
    <SolidColorBrush x:Key="RunningBackgroundColour" Color="Yellow" />
    <SolidColorBrush x:Key="SuccessBackgroundColour" Color="#FF448032" />
    <SolidColorBrush x:Key="FailureBackgroundColour" Color="Firebrick" />
    <SolidColorBrush x:Key="UnnkownBackgroundColour" Color="Gray" />

    <SolidColorBrush x:Key="WarningForegroundColour" Color="Firebrick" />

    <Style x:Key="BuildAgentImage" TargetType="{x:Type Image}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=BuildAgent.IsOnline}" Value="True">
                <Setter Property="Source" Value="/NoeticTools.TeamStatusBoard.Framework;component/Images/server128x128.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.IsOnline}" Value="False">
                <Setter Property="Source" Value="/NoeticTools.TeamStatusBoard.Framework;component/Images/server128x128_light.png" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeviceText" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Disabled}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Running}">
                <Setter Property="Foreground" Value="DarkSlateGray"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Idle}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Unknown}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Offline}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.NotAuthorised}">
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeviceBackground" TargetType="{x:Type Grid}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Disabled}">
                <Setter Property="Background" Value="Gray"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Running}">
                <Setter Property="Background" Value="Yellow"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Idle}">
                <Setter Property="Background" Value="#FF448032"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Unknown}">
                <Setter Property="Background" Value="#FF292929"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.Offline}">
                <Setter Property="Background" Value="Firebrick"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=BuildAgent.Status}" Value="{x:Static loc:DeviceStatus.NotAuthorised}">
                <Setter Property="Background" Value="DarkCyan"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Dark tile style -->
    <SolidColorBrush x:Key="DarkTileStyleBackgroundBrush">#FF292929</SolidColorBrush>
    <SolidColorBrush x:Key="DarkTileStyleForegroundBrush">WhiteSmoke</SolidColorBrush>
    <SolidColorBrush x:Key="DarkTileStyleGridHeaderRowBrush">#FF448032</SolidColorBrush>
    <Style x:Key="DarkTileStyleTextbox" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource DarkTileStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="DarkTileStyleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource DarkTileStyleBackgroundBrush}"/>
    </Style>
    
    <Style x:Key="DarkTileStyleExpiredTimeAlertGrid" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="NEAR ALERT">
                <Setter Property="Background" Value="{StaticResource RunningBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RECENT">
                <Setter Property="Background" Value="{StaticResource SuccessBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="ALERT">
                <Setter Property="Background" Value="{StaticResource FailureBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="UNKNOWN">
                <Setter Property="Background" Value="{StaticResource UnnkownBackgroundColour}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DarkTileStyleExpiredTimeAlertTextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="NEAR ALERT">
                <Setter Property="Foreground" Value="{StaticResource WarningForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RECENT">
                <Setter Property="Foreground" Value="{StaticResource RunningFailedForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="SUCCESS">
                <Setter Property="Foreground" Value="{StaticResource SuccessForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="ALERT">
                <Setter Property="Foreground" Value="{StaticResource FailureForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="UNKNOWN">
                <Setter Property="Foreground" Value="{StaticResource UnnkownForegroundColour}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DarkTileStyleBuildStatusGrid" TargetType="Grid">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RUNNING">
                <Setter Property="Background" Value="{StaticResource RunningBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RUNNING FAILED">
                <Setter Property="Background" Value="{StaticResource RunningFailedBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="SUCCESS">
                <Setter Property="Background" Value="{StaticResource SuccessBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="FAILURE">
                <Setter Property="Background" Value="{StaticResource FailureBackgroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="UNKNOWN">
                <Setter Property="Background" Value="{StaticResource UnnkownBackgroundColour}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DarkTileStyleBuildStatusTextBlock" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RUNNING">
                <Setter Property="Foreground" Value="{StaticResource RunningForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="RUNNING FAILED">
                <Setter Property="Foreground" Value="{StaticResource RunningFailedForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="SUCCESS">
                <Setter Property="Foreground" Value="{StaticResource SuccessForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="FAILURE">
                <Setter Property="Foreground" Value="{StaticResource FailureForegroundColour}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Status, Mode=OneWay}" Value="UNKNOWN">
                <Setter Property="Foreground" Value="{StaticResource UnnkownForegroundColour}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- White tile style -->
    <SolidColorBrush x:Key="WhiteTileStyleBackgroundBrush">WhiteSmoke</SolidColorBrush>
    <SolidColorBrush x:Key="WhiteTileStyleForegroundBrush">Teal</SolidColorBrush>
    <Style x:Key="WhiteTileStyleTextbox" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource WhiteTileStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="WhiteTileStyleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource WhiteTileStyleBackgroundBrush}"/>
    </Style>

    <!-- Teal tile style -->
    <SolidColorBrush x:Key="TealTileStyleBackgroundBrush">Teal</SolidColorBrush>
    <SolidColorBrush x:Key="TealTileStyleForegroundBrush">WhiteSmoke</SolidColorBrush>
    <Style x:Key="TealTileStyleTextbox" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TealTileStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="TealTileStyleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource TealTileStyleBackgroundBrush}"/>
    </Style>

    <!-- Tech tile style -->
    <SolidColorBrush x:Key="TechTileStyleBackgroundBrush">White</SolidColorBrush>
    <SolidColorBrush x:Key="TechTileStyleForegroundBrush">Black</SolidColorBrush>
    <SolidColorBrush x:Key="TechTilelStyleDarkBackgroundBrush">LightGray</SolidColorBrush>
    <Style x:Key="TechTileStyleTextbox" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource TechTileStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="TechTileStyleTextblock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TechTileStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="TechTileStyleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource TechTileStyleBackgroundBrush}"/>
    </Style>
    <Style x:Key="TechTileStyleButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ConfigPanelStyleDarkBackgroundBrush}"/>
    </Style>

    <!-- Configuration tile style -->
    <SolidColorBrush x:Key="ConfigPanelStyleBackgroundBrush">Black</SolidColorBrush>
    <SolidColorBrush x:Key="ConfigPanelStyleForegroundBrush">White</SolidColorBrush>
    <SolidColorBrush x:Key="ConfigPanelStyleDarkBackgroundBrush">Black</SolidColorBrush>
    <Style x:Key="ConfigPanelStyleTextbox" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ConfigPanelStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="ConfigPanelStyleLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource ConfigPanelStyleForegroundBrush}"/>
    </Style>
    <Style x:Key="ConfigPanelStyleGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource ConfigPanelStyleBackgroundBrush}"/>
    </Style>
    <Style x:Key="ConfigPanelStyleButton" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ConfigPanelStyleForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource ConfigPanelStyleDarkBackgroundBrush}"/>
    </Style>
    <Style x:Key="ConfigPanelStyleToolbarButton" TargetType="Button">
        <Style.Resources>
            <Style TargetType="StackPanel">
                <Style.Resources>
                    <Style TargetType="Image">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="ConfigPanelStyleCombobox" TargetType="ComboBox">
        <Setter Property="Background" Value="{StaticResource ConfigPanelStyleDarkBackgroundBrush}"/>
    </Style>
    <Style x:Key="ConfigpanelStyleHyperlink" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{StaticResource ConfigPanelStyleForegroundBrush}"/>
    </Style>

    <!-- Side panel style -->
    
    <converters:DoubleValueConverter x:Key="doubleConverter" />

    <Style x:Key="SidePane" TargetType="DockPanel">
        <Setter Property="Focusable" Value="True"/>
    </Style>

    <!-- Tile focus style -->

    <Style x:Key="FocusBorder" TargetType="Border">
        <Setter Property="Focusable" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="true">
                
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation BeginTime="00:00:00.0" To="1,1,1,1" Duration="00:00:00.3" Storyboard.TargetProperty="BorderThickness" />
                            <ThicknessAnimation BeginTime="00:00:10.0" To="0,0,0,0" Duration="00:00:01.0" Storyboard.TargetProperty="BorderThickness" />
                            <ThicknessAnimation BeginTime="00:00:00.0"  To="2,2,2,2" Duration="00:00:00.3" Storyboard.TargetProperty="Padding" />
                            <ThicknessAnimation BeginTime="00:00:10.0"  To="0,0,0,0" Duration="00:00:01.0" Storyboard.TargetProperty="Padding" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation To="0,0,0,0" Duration="00:00:00.3" Storyboard.TargetProperty="BorderThickness" />
                            <ThicknessAnimation To="0,0,0,0" Duration="00:00:00.3" Storyboard.TargetProperty="Padding" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                
                <Setter Property="BorderBrush" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>